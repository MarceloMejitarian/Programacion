//AulaFunciones.cpp
//
#include "stdafx.h"
#include "conio.h"
#include <iostream>
#include "math.h"
using namespace std;

int DigitoSumaImpar(int a);

int Invertir(int a);

int DigitoCanti(int a);

int Divi(int a,int b);

bool validar(int a,int b);

int Multi (int a, int b);

int Unir (int a, int b);

int SumaPrimosDigitos(int a);

bool NumeroPrimoVerif(int a);

bool ConfirmarDigitosOrdenados(int a);

int main()
{
int x,y,P;
do
{
cout << "Introducir un numero";
cin >> x;
/*
cout << "Introduzca otro";
cin >> y;
}
while (validar(x,y) == false);*/
P = ConfirmarDigitosOrdenados(x);
cout << "El resultado es:" << P;
 
_getch(); 

 return 0;
}

/*int Divi(int a , int b)
{
 int i=0;
 while (a > 0)
  {
   a=a/b;
   i=i+1;
  }
return (i);
}

int Multi(int a, int b)
{
 int S=0, i;
 for (i = 0;i < b;i++)
 {
  S = S+ a;
 }
return (S);
}


bool validar(int a , int b)
{
  bool k=false;
  if ((a > 0) && (b > 0) && (a%b == 0))
  {
   k = true;
  }
  else
  {
   if (a <= 0)
  {
   cout <<"Datos invalidos, numeros deben ser mayores a cero ";
  }
  if (b <= 0)
 {
  cout << "Datos invalidos, numeros deben ser mayores a cero ";
 }
  if (b > 0)
 {
  if (a%b != 0)
  cout << " No se puede realizar la division exacta";
 }
 else
 {
 cout << "No se puede divisiÃ²n entre cero";
 }
}
return(k);
}

int DigitoCanti(int a)
{
 int i=0;
 while (a > 0)
  {
   a=a/10;
   i=i+1;
  }
 return(i);
}

int DigitoSumaImpar(int a)
{
 int S=0, d;
 while (a > 0)
  {
   d=a%10;
  if (d%2 != 0)
  {
   S=S+d;
  }
  a=a/10;
 }
return (S);
}

int Invertir(int a)
{
  int W=0, d;
  while (a > 0)
  {
   d=a%10;
   W=W*10+d;
  }
 return(W);
}

int Unir(int a, int b)
{
   int d,i;  
   while (b > 0)
   {
    b = b/10;
    i = i+1;
   }
   d = a * pow(10,i)+ b;
  return(d);
}


bool NumeroPrimoVerif(int a)
{   
	int i;
	bool k=true;
	for (i=2;i<=a-1;++)
	{	if(a%i == 0)
	  {
	    k = false;
	   }
	}
	return(k);
}

int SumaPrimosDigitos(int a)
{
	int S=0;D;
    while (a > 0)
	{
		D = n % 10;
		if (NumeroPrimoVerif(n) == true)
		{		
			S=S+D;
		}
		n=n/10;
	}
	return(D);
}*/

bool ConfirmarDigitosOrdenados(int a)
{
	bool k=true;
    int d,e;
       d = a%10;
	   while ((a>0) && (k== true))
	   {
	     e=a%10;
	     if (e < d)
	     {
           d = e;
		   k = false;
	     }
		 a = a/10;
	   }
 return(k);
}
